--ST LOUIS MSD SANDBOX
UPDATE SD_REQUEST
SET E_CR_RISK_SCORE = '52'
	,E_CR_BUSINESS_IMPACT = 'Enterprise & External'
	,E_CR_SERVICE_STATE = 'System/Service Outage'
	,E_CR_OCCURS = 'Non Business Hours'
	,E_CR_EXPECTED_LENGTH = '2-4 Hours'
	,E_CR_TESTED = 'No'
	,E_CR_BACKOUT_EFFORT = 'Difficult%Impossible%Undesirable'
	,E_CR_LOCATION = 'All Locations Impacted'
WHERE END_DATE_UT IS NULL
AND RFC_NUMBER LIKE '%CHG%'
AND CAST(CREATION_DATE_UT AS DATE) = CAST(GETDATE() AS DATE)
AND CI_ID IN (SELECT ASSET_ID FROM AM_ASSET WHERE IS_CI = 1 AND NETWORK_IDENTIFIER = '')
AND COMMENT LIKE '%%'
	




E_CR_RISK_SCORE = ‘Calculated based on fields auto filled in below’
E_CR_BUSINESS_IMPACT = 'Enterprise & External'
E_CR_SERVICE_STATE = 'System/Service Outage'
E_CR_OCCURS = 'Non Business Hours'
E_CR_EXPECTED_LENGTH = '2-4 Hours'
E_CR_TESTED = 'No'
E_CR_BACKOUT_EFFORT LIKE 'Difficult%Impossible%Undesirable'
E_CR_LOCATION = 'All Locations Impacted'


UPDATE SD_REQUEST
SET E_CR_RISK_SCORE =
(
SELECT 
	CASE
		WHEN R.E_CR_BUSINESS_IMPACT = 'Enterprise & External'
		THEN 12
		WHEN R.E_CR_BUSINESS_IMPACT = 'Enterprise'
		THEN 12
		WHEN R.E_CR_BUSINESS_IMPACT = 'Multiple Departments'
		THEN 8
		WHEN R.E_CR_BUSINESS_IMPACT = 'Single Department'
		THEN 4
		WHEN R.E_CR_BUSINESS_IMPACT = 'Small Functional Area'
		THEN 1
		ELSE 1
	END
	+
	CASE
		WHEN R.E_CR_SERVICE_STATE = 'System/Service Outage'
		THEN 12
		WHEN R.E_CR_SERVICE_STATE = 'Limited/Reduced Functionality'
		THEN 4
		WHEN R.E_CR_SERVICE_STATE = 'Read-Only'
		THEN 1
		WHEN R.E_CR_SERVICE_STATE = 'Normal Functionality'
		THEN 0
		ELSE 0
	END
	+
	CASE
		WHEN R.E_CR_OCCURS = 'During the Scheduled Maintenance Window'
		THEN 1
		WHEN R.E_CR_OCCURS = 'Non Business Hours'
		THEN 4
		WHEN R.E_CR_OCCURS = 'Business Hours'
		THEN 8
		ELSE 1
	END
	+
	CASE
		WHEN R.E_CR_EXPECTED_LENGTH = 'Greater than 9 Hours'
		THEN 12
		WHEN R.E_CR_EXPECTED_LENGTH = '5-8 Hours'
		THEN 8
		WHEN R.E_CR_EXPECTED_LENGTH = '2-4 Hours'
		THEN 4
		WHEN R.E_CR_EXPECTED_LENGTH = '0-2 Hours'
		THEN 2
		WHEN R.E_CR_EXPECTED_LENGTH = 'No Outage Expected'
		THEN 0
		ELSE 0
	END
	+
	CASE
		WHEN R.E_CR_TESTED = 'Yes'
		THEN 1
		WHEN R.E_CR_TESTED = 'No'
		THEN 8
		ELSE 1
	END
	+
	CASE
		WHEN R.E_CR_BACKOUT_EFFORT LIKE 'Difficult%Impossible%Undesirable'
		THEN 12
		WHEN R.E_CR_BACKOUT_EFFORT LIKE 'Possible%Not easily executed%Would extend beyond the Maintenance Window%'
		THEN 8
		WHEN R.E_CR_BACKOUT_EFFORT = 'In Place and Easily Executed in the Maintenance Window'
		THEN 4
		WHEN R.E_CR_BACKOUT_EFFORT = 'Minimal'
		THEN 1
		ELSE 1
	END AS "RISK_SCORE"
FROM SD_REQUEST R
WHERE REQUEST_ID IN (@ID@)
)
WHERE REQUEST_ID IN (@ID@);

UPDATE SD_REQUEST
SET E_CR_LOCATION =
(
SELECT
	(SELECT
		CASE
		WHEN Q.QUESTION_CODE = 'LOC_ALL' AND QR.RESULT_BIT = 1
		THEN 'All Locations Impacted '
		ELSE ''
		END
	FROM SD_QUESTION_RESULT QR
	INNER JOIN SD_QUESTION Q ON Q.QUESTION_ID = QR.QUESTION_ID
	WHERE QR.REQUEST_ID IN (PR.REQUEST_ID)
	AND Q.QUESTION_CODE IN ('LOC_ALL'))
	+
	(SELECT
		CASE
	WHEN Q.QUESTION_CODE = 'LOC_BISSEL' AND QR.RESULT_BIT = 1
	THEN 'Bissel, '
	ELSE ''
	END
	FROM SD_QUESTION_RESULT QR
	INNER JOIN SD_QUESTION Q ON Q.QUESTION_ID = QR.QUESTION_ID
	WHERE QR.REQUEST_ID IN (PR.REQUEST_ID)
	AND Q.QUESTION_CODE IN ('LOC_BISSEL'))
	+
	(SELECT
		CASE
	WHEN Q.QUESTION_CODE = 'LOC_COLDWATER' AND QR.RESULT_BIT = 1
	THEN 'Coldwater, '
	ELSE ''
	END
	FROM SD_QUESTION_RESULT QR
	INNER JOIN SD_QUESTION Q ON Q.QUESTION_ID = QR.QUESTION_ID
	WHERE QR.REQUEST_ID IN (PR.REQUEST_ID)
	AND Q.QUESTION_CODE IN ('LOC_COLDWATER'))
	+
	(SELECT
		CASE
	WHEN Q.QUESTION_CODE = 'LOC_FENTON' AND QR.RESULT_BIT = 1
	THEN 'Fenton, '
	ELSE ''
	END
	FROM SD_QUESTION_RESULT QR
	INNER JOIN SD_QUESTION Q ON Q.QUESTION_ID = QR.QUESTION_ID
	WHERE QR.REQUEST_ID IN (PR.REQUEST_ID)
	AND Q.QUESTION_CODE IN ('LOC_FENTON'))
	+
	(SELECT
		CASE
	WHEN Q.QUESTION_CODE = 'LOC_GBLAZE' AND QR.RESULT_BIT = 1
	THEN 'Grand Blaze, '
	ELSE ''
	END
	FROM SD_QUESTION_RESULT QR
	INNER JOIN SD_QUESTION Q ON Q.QUESTION_ID = QR.QUESTION_ID
	WHERE QR.REQUEST_ID IN (PR.REQUEST_ID)
	AND Q.QUESTION_CODE IN ('LOC_GBLAZE'))
	+
	(SELECT
		CASE
	WHEN Q.QUESTION_CODE = 'LOC_LPLANT' AND QR.RESULT_BIT = 1
	THEN 'Lemay Plant, '
	ELSE ''
	END
	FROM SD_QUESTION_RESULT QR
	INNER JOIN SD_QUESTION Q ON Q.QUESTION_ID = QR.QUESTION_ID
	WHERE QR.REQUEST_ID IN (PR.REQUEST_ID)
	AND Q.QUESTION_CODE IN ('LOC_LPLANT'))
	+
	(SELECT
		CASE
	WHEN Q.QUESTION_CODE = 'LOC_LPUMP' AND QR.RESULT_BIT = 1
	THEN 'Lemay Pump, '
	ELSE ''
	END
	FROM SD_QUESTION_RESULT QR
	INNER JOIN SD_QUESTION Q ON Q.QUESTION_ID = QR.QUESTION_ID
	WHERE QR.REQUEST_ID IN (PR.REQUEST_ID)
	AND Q.QUESTION_CODE IN ('LOC_LPUMP'))
	+
	(SELECT
		CASE
	WHEN Q.QUESTION_CODE = 'LOC_MARKET' AND QR.RESULT_BIT = 1
	THEN 'Market, '
	ELSE ''
	END
	FROM SD_QUESTION_RESULT QR
	INNER JOIN SD_QUESTION Q ON Q.QUESTION_ID = QR.QUESTION_ID
	WHERE QR.REQUEST_ID IN (PR.REQUEST_ID)
	AND Q.QUESTION_CODE IN ('LOC_MARKET'))
	+
	(SELECT
		CASE
	WHEN Q.QUESTION_CODE = 'LOC_MERAMEC' AND QR.RESULT_BIT = 1
	THEN 'Meramec, '
	ELSE ''
	END
	FROM SD_QUESTION_RESULT QR
	INNER JOIN SD_QUESTION Q ON Q.QUESTION_ID = QR.QUESTION_ID
	WHERE QR.REQUEST_ID IN (PR.REQUEST_ID)
	AND Q.QUESTION_CODE IN ('LOC_MERAMEC'))
	+
	(SELECT
		CASE
	WHEN Q.QUESTION_CODE = 'LOC_MINTERT' AND QR.RESULT_BIT = 1
	THEN 'Minrert, '
	ELSE ''
	END
	FROM SD_QUESTION_RESULT QR
	INNER JOIN SD_QUESTION Q ON Q.QUESTION_ID = QR.QUESTION_ID
	WHERE QR.REQUEST_ID IN (PR.REQUEST_ID)
	AND Q.QUESTION_CODE IN ('LOC_MINTERT'))
	+
	(SELECT
		CASE
	WHEN Q.QUESTION_CODE = 'LOC_MORIVER' AND QR.RESULT_BIT = 1
	THEN 'MO River, '
	ELSE ''
	END
	FROM SD_QUESTION_RESULT QR
	INNER JOIN SD_QUESTION Q ON Q.QUESTION_ID = QR.QUESTION_ID
	WHERE QR.REQUEST_ID IN (PR.REQUEST_ID)
	AND Q.QUESTION_CODE IN ('LOC_MORIVER'))
	+
	(SELECT
		CASE
	WHEN Q.QUESTION_CODE = 'LOC_SULPHUR' AND QR.RESULT_BIT = 1
	THEN 'Sulphur, '
	ELSE ''
	END
	FROM SD_QUESTION_RESULT QR
	INNER JOIN SD_QUESTION Q ON Q.QUESTION_ID = QR.QUESTION_ID
	WHERE QR.REQUEST_ID IN (PR.REQUEST_ID)
	AND Q.QUESTION_CODE IN ('LOC_SULPHUR')) AS "CR_LOCATIONS_IMPACTED"
FROM SD_REQUEST PR
WHERE PR.REQUEST_ID IN (@ID@)
)
WHERE REQUEST_ID IN (@ID@);

INSERT INTO AM_ACTION
	(DONE_BY_ID
	,ACTION_LABEL_EN
	,REQUEST_ID
	,LOCATION_ID
	,COMMENT
	,START_DATE_UT
	,END_DATE_UT
	,CREATION_DATE_UT
	,STATUS_ID_ON_CREATE
	,STATUS_ID_ON_TERMINATE
	,ACTION_TYPE_ID
	,TO_TRUNC
	,IS_LOCKED_PROGRESS_POINT
	,ORIGIN_TOOL_ID
	,LAST_UPDATE)
SELECT TOP 1
	R.REQUESTOR_ID
	,'Link to a Ticket'
	,R.REQUEST_ID
	,6
	,R.EXTERNAL_REFERENCE
	,GETUTCDATE()
	,GETUTCDATE()
	,GETUTCDATE()
	,R.STATUS_ID
	,R.STATUS_ID
	,72
	,0
	,0
	,1
	,GETUTCDATE()
FROM SD_REQUEST R
WHERE R.REQUEST_ID IN (@ID@);


SELECT TOP 100 C1.*
FROM AM_CATALOG C1
INNER JOIN AM_UN_CLASSIFICATION_PATH TP1 ON TP1.UN_CLASSIFICATION_ID = C1.UN_CLASSIFICATION_ID 
WHERE TP1.UN_CLASSIFICATION_PATH_EN LIKE 'CI/%'   

SELECT TOP 100 T1.*
FROM AM_UN_CLASSIFICATION T1
INNER JOIN AM_UN_CLASSIFICATION_PATH TP1 ON TP1.UN_CLASSIFICATION_ID = T1.UN_CLASSIFICATION_ID
WHERE TP1.UN_CLASSIFICATION_PATH_EN LIKE 'CI/%'   

CI_STATUS_EN

SELECT TOP 100 A1.*
FROM AM_ASSET A1
INNER JOIN AM_CATALOG C1 ON C1.CATALOG_ID = A1.CATALOG_ID
INNER JOIN AM_UN_CLASSIFICATION T1 ON T1.UN_CLASSIFICATION_ID = C1.UN_CLASSIFICATION_ID
INNER JOIN CMDB_CI_STATUS S1 ON S1.CI_STATUS_ID = A1.CI_STATUS_ID
INNER JOIN AM_UN_CLASSIFICATION_PATH TP1 ON TP1.UN_CLASSIFICATION_ID = C1.UN_CLASSIFICATION_ID 
WHERE TP1.UN_CLASSIFICATION_PATH_EN LIKE 'CI/%'   
AND A1.REMOVED_DATE IS NULL
AND A1.IS_CI = 1 

UPDATE A1
SET END_DATE_UT = NULL
    ,CI_STATUS_ID = 2
FROM AM_ASSET A1
INNER JOIN SD_REQUEST R1 ON R1.CI_ID = A1.ASSET_ID
WHERE R1.REQUEST_ID IN (@ID@);



AM_ASSET A1

INNER JOIN SD_REQUEST R1 ON R1.CI_ID = A1.ASSET_ID

R1.REQUEST_ID IN (@ID@)

#203f56

<h4>#[TRANSLATION.by_status]#</h4>

340

--NEW fields
SD_REQUEST
Target fields from questionnaire
AM_ASSET
Environment
Support Group



ALTER TABLE [50004].AM_ASSET ADD E_CI_ENVIRONMENT NVARCHAR(100)
GO
ALTER TABLE [50004].AM_ASSET ADD E_CI_SUPPORT_GROUP_ID INT
GO
ALTER TABLE [50004].AM_ASSET WITH NOCHECK ADD CONSTRAINT [FK_AM_ASSET_E_CI_SUPPORT_GROUP_ID] FOREIGN KEY ([E_CI_SUPPORT_GROUP_ID]) REFERENCES [50004].AM_GROUP ([GROUP_ID])
GO
ALTER TABLE [50004].AM_ASSET CHECK CONSTRAINT [FK_AM_ASSET_E_CI_SUPPORT_GROUP_ID]
GO
ALTER TABLE [50004].SD_REQUEST ADD E_CI_TYPEID INT
GO
ALTER TABLE [50004].SD_REQUEST ADD E_CI_TYPE NVARCHAR(100)
GO
ALTER TABLE [50004].SD_REQUEST ADD E_CI_MODELID INT
GO
ALTER TABLE [50004].SD_REQUEST ADD E_CI_MODEL NVARCHAR(100)
GO
ALTER TABLE [50004].SD_REQUEST ADD E_CI_NAME NVARCHAR(500)
GO
ALTER TABLE [50004].SD_REQUEST ADD E_CI_SERIALNO NVARCHAR(300)
GO
ALTER TABLE [50004].SD_REQUEST ADD E_CI_ENVIRONMENT NVARCHAR(100)
GO
ALTER TABLE [50004].SD_REQUEST ADD E_CI_SUPPORT_GROUP_ID INT
GO
ALTER TABLE [50004].SD_REQUEST WITH NOCHECK ADD CONSTRAINT [FK_SD_REQUEST_E_CI_SUPPORT_GROUP_ID] FOREIGN KEY ([E_CI_SUPPORT_GROUP_ID]) REFERENCES [50004].AM_GROUP ([GROUP_ID])
GO
ALTER TABLE [50004].SD_REQUEST CHECK CONSTRAINT [FK_SD_REQUEST_E_CI_SUPPORT_GROUP_ID]
GO
ALTER TABLE [50004].SD_REQUEST ADD E_CI_UPDATES NVARCHAR(MAX)
GO


UPDATE A1
SET A1.NETWORK_IDENTIFIER = R1.E_CI_NAME
	,A1.SERIAL_NUMBER= R1.E_CI_SERIALNO
	,A1.E_CI_ENVIRONMENT = R1.E_CI_ENVIRONMENT
	,A1.E_CI_SUPPORT_GROUP_ID = R1.E_CI_SUPPORT_GROUP_ID
FROM AM_ASSET A1
INNER JOIN SD_REQUEST R1 ON R1.CI_ID = A1.ASSET_ID
WHERE R1.REQUEST_ID IN (@ID@)


INSERT INTO AM_ASSET
	(
		NETWORK_IDENTIFIER
		,SERIAL_NUMBER
		,E_CI_ENVIRONMENT
		,E_CI_SUPPORT_GROUP_ID
		,CATALOG_ID
		,CI_STATUS_ID
		,LOCATION_ID
		,DEPARTMENT_ID
		,IS_CI
	)
VALUES
	(
		'#[VAR.varNETWORK_IDENTIFIER]#'
		,'#[VAR.varSERIAL_NUMBER]#'
		,'#[VAR.varENVIRONMENT]#'
		,#[VAR.varSUPPORT_GROUP]#
		,#[VAR.varCATALOG_ID]#
		,1
		,6
		,5
		,1
	)
	
	
	
E_HR_MANAGER_NAME_1 



UPDATE R1
SET R1.RECIPIENT_ID = E1.EMPLOYEE_ID
FROM SD_REQUEST R1
INNER JOIN AM_EMPLOYEE E1 ON E1.LAST_NAME LIKE R1.E_HR_MANAGER_NAME_1
WHERE R1.REQUEST_ID IN (@ID@);




SELECT TOP 100
	SD_CATALOG_ID
	,CATALOG_GUID
	,TITLE_EN
	,CODE
	,BIG_PICTURE_PATH
FROM SD_CATALOG 
ORDER BY SD_CATALOG_ID DESC 

UPDATE SD_CATALOG
SET CATALOG_GUID = '{2F1567DD-9AF3-4D6A-B386-5410CDF3CB0E}'
WHERE CODE = 'CMDB-TERMCI';

UPDATE SD_CATALOG
SET CATALOG_GUID = '{B358AD48-10B2-4FE0-B5B2-D6327B4137C2}'
WHERE CODE = 'CMDB-MODCI';

UPDATE SD_CATALOG
SET CATALOG_GUID = '{4C84A9B0-DB0D-4818-B942-5AABEB89968D}'
WHERE CODE = 'CMDB-NEWCI';

UPDATE SD_CATALOG
SET CATALOG_GUID = '{016C9D3E-C22B-4FFE-96A6-16CF03D8BDB5}'
WHERE CODE = 'CMDB-MGT';

UPDATE AM_GROUP
SET GROUP_GUID = '{764D748D-9397-444A-91F8-DD279146CB00}'
WHERE GROUP_EN = 'CMDB Management';

UPDATE AM_ROLE
SET ROLE_GUID = '{A08C9912-4A35-4F4A-A81B-B408035F950F}'
WHERE ROLE_EN = 'CMDB Management';



6216	{2F1567DD-9AF3-4D6A-B386-5410CDF3CB0E}	Terminate CI	CMDB-TERMCI	catalog/TERM_ICON.png
6215	{B358AD48-10B2-4FE0-B5B2-D6327B4137C2}	Modify CI	CMDB-MODCI	catalog/MODIFY_ICON.png
6214	{4C84A9B0-DB0D-4818-B942-5AABEB89968D}	New CI	CMDB-NEWCI	catalog/NEW_ICON.png
6213	{016C9D3E-C22B-4FFE-96A6-16CF03D8BDB5}	CMDB Management	CMDB-MGT


SELECT TOP 1
 REPLACE(REPLACE(SUBSTRING(COMMENT, 
	CHARINDEX('@Manager_Email_1_S@', 
	COMMENT),
	CHARINDEX('@Manager_Email_1_E@',
	COMMENT) - CHARINDEX('@Manager_Email_1_S@', 
	COMMENT) + Len('@Manager_Email_1_E@')),'@Manager_Email_1_S@',''),'@Manager_Email_1_E@','') AS "Manager_Email"
FROM SD_REQUEST
WHERE REQUEST_ID IN (@ID@);